{
  "{\"filename\":\"/app/server.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "express"
              }
            ]
          },
          {
            "source": "apollo-server-express",
            "imported": [
              "ApolloServer"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "ApolloServer",
                "local": "ApolloServer"
              }
            ]
          },
          {
            "source": "./api/schemas",
            "imported": [
              "typeDefs"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "typeDefs",
                "local": "typeDefs"
              }
            ]
          },
          {
            "source": "./api/resolvers",
            "imported": [
              "resolvers"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "resolvers",
                "local": "resolvers"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server.js",
      "filenameRelative": "/app/server.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "server.js",
      "sourceFileName": "server.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "server"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _apolloServerExpress = require('apollo-server-express');\n\nvar _schemas = require('./api/schemas');\n\nvar _resolvers = require('./api/resolvers');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Resolvers\n\n// Iniciar Express\n// Modulo para Apollo\nvar app = (0, _express2.default)();\n\n// Paginas Estaticas\n// Schemas\n// Modulo de Express\napp.use(_express2.default.static('public'));\napp.get('/', function (request, response) {\n  response.sendFile(__dirname + '/views/index.html');\n});\n\n// Iniciar el Server de GraphQL\nvar server = new _apolloServerExpress.ApolloServer({ typeDefs: _schemas.typeDefs, resolvers: _resolvers.resolvers });\nserver.applyMiddleware({ app: app }); // Conectar Apollo con Express\n\n// Listo para Escuchar Request\nvar listener = app.listen(process.env.PORT, function () {\n  console.log('Your app is listening on port ' + listener.address().port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJleHByZXNzIiwic3RhdGljIiwiZ2V0IiwicmVxdWVzdCIsInJlc3BvbnNlIiwic2VuZEZpbGUiLCJfX2Rpcm5hbWUiLCJzZXJ2ZXIiLCJBcG9sbG9TZXJ2ZXIiLCJ0eXBlRGVmcyIsInJlc29sdmVycyIsImFwcGx5TWlkZGxld2FyZSIsImxpc3RlbmVyIiwibGlzdGVuIiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJjb25zb2xlIiwibG9nIiwiYWRkcmVzcyIsInBvcnQiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUE2Qzs7QUFFN0M7QUFKc0Q7QUFLdEQsSUFBTUEsTUFBTSx3QkFBWjs7QUFFQTtBQU4wQztBQUZYO0FBUy9CQSxJQUFJQyxHQUFKLENBQVFDLGtCQUFRQyxNQUFSLENBQWUsUUFBZixDQUFSO0FBQ0FILElBQUlJLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBU0MsT0FBVCxFQUFrQkMsUUFBbEIsRUFBNEI7QUFDdkNBLFdBQVNDLFFBQVQsQ0FBa0JDLFlBQVksbUJBQTlCO0FBQ0QsQ0FGRDs7QUFJQTtBQUNBLElBQU1DLFNBQVMsSUFBSUMsaUNBQUosQ0FBaUIsRUFBQ0MsMkJBQUQsRUFBV0MsK0JBQVgsRUFBakIsQ0FBZjtBQUNBSCxPQUFPSSxlQUFQLENBQXVCLEVBQUNiLFFBQUQsRUFBdkIsRSxDQUErQjs7QUFFL0I7QUFDQSxJQUFNYyxXQUFXZCxJQUFJZSxNQUFKLENBQVdDLFFBQVFDLEdBQVIsQ0FBWUMsSUFBdkIsRUFBNkIsWUFBVztBQUN2REMsVUFBUUMsR0FBUixDQUFZLG1DQUFtQ04sU0FBU08sT0FBVCxHQUFtQkMsSUFBbEU7QUFDRCxDQUZnQixDQUFqQiIsImZpbGUiOiJzZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiL2FwcCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnOyAvLyBNb2R1bG8gZGUgRXhwcmVzc1xuaW1wb3J0IHsgQXBvbGxvU2VydmVyIH0gZnJvbSAnYXBvbGxvLXNlcnZlci1leHByZXNzJzsgLy8gTW9kdWxvIHBhcmEgQXBvbGxvXG5pbXBvcnQgeyB0eXBlRGVmcyB9IGZyb20gJy4vYXBpL3NjaGVtYXMnOyAvLyBTY2hlbWFzXG5pbXBvcnQgeyByZXNvbHZlcnMgfSBmcm9tICcuL2FwaS9yZXNvbHZlcnMnOyAvLyBSZXNvbHZlcnNcblxuLy8gSW5pY2lhciBFeHByZXNzXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbi8vIFBhZ2luYXMgRXN0YXRpY2FzXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKCdwdWJsaWMnKSk7XG5hcHAuZ2V0KCcvJywgZnVuY3Rpb24ocmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgcmVzcG9uc2Uuc2VuZEZpbGUoX19kaXJuYW1lICsgJy92aWV3cy9pbmRleC5odG1sJyk7XG59KTtcblxuLy8gSW5pY2lhciBlbCBTZXJ2ZXIgZGUgR3JhcGhRTFxuY29uc3Qgc2VydmVyID0gbmV3IEFwb2xsb1NlcnZlcih7dHlwZURlZnMsIHJlc29sdmVyc30pO1xuc2VydmVyLmFwcGx5TWlkZGxld2FyZSh7YXBwfSk7IC8vIENvbmVjdGFyIEFwb2xsbyBjb24gRXhwcmVzc1xuXG4vLyBMaXN0byBwYXJhIEVzY3VjaGFyIFJlcXVlc3RcbmNvbnN0IGxpc3RlbmVyID0gYXBwLmxpc3Rlbihwcm9jZXNzLmVudi5QT1JULCBmdW5jdGlvbigpIHtcbiAgY29uc29sZS5sb2coJ1lvdXIgYXBwIGlzIGxpc3RlbmluZyBvbiBwb3J0ICcgKyBsaXN0ZW5lci5hZGRyZXNzKCkucG9ydCk7XG59KTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "express",
        "static",
        "get",
        "request",
        "response",
        "sendFile",
        "__dirname",
        "server",
        "ApolloServer",
        "typeDefs",
        "resolvers",
        "applyMiddleware",
        "listener",
        "listen",
        "process",
        "env",
        "PORT",
        "console",
        "log",
        "address",
        "port"
      ],
      "mappings": ";;AAAA;;;;AACA;;AACA;;AACA;;;;AAA6C;;AAE7C;AAJsD;AAKtD,IAAMA,MAAM,wBAAZ;;AAEA;AAN0C;AAFX;AAS/BA,IAAIC,GAAJ,CAAQC,kBAAQC,MAAR,CAAe,QAAf,CAAR;AACAH,IAAII,GAAJ,CAAQ,GAAR,EAAa,UAASC,OAAT,EAAkBC,QAAlB,EAA4B;AACvCA,WAASC,QAAT,CAAkBC,YAAY,mBAA9B;AACD,CAFD;;AAIA;AACA,IAAMC,SAAS,IAAIC,iCAAJ,CAAiB,EAACC,2BAAD,EAAWC,+BAAX,EAAjB,CAAf;AACAH,OAAOI,eAAP,CAAuB,EAACb,QAAD,EAAvB,E,CAA+B;;AAE/B;AACA,IAAMc,WAAWd,IAAIe,MAAJ,CAAWC,QAAQC,GAAR,CAAYC,IAAvB,EAA6B,YAAW;AACvDC,UAAQC,GAAR,CAAY,mCAAmCN,SAASO,OAAT,GAAmBC,IAAlE;AACD,CAFgB,CAAjB",
      "file": "server.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "import express from 'express'; // Modulo de Express\nimport { ApolloServer } from 'apollo-server-express'; // Modulo para Apollo\nimport { typeDefs } from './api/schemas'; // Schemas\nimport { resolvers } from './api/resolvers'; // Resolvers\n\n// Iniciar Express\nconst app = express();\n\n// Paginas Estaticas\napp.use(express.static('public'));\napp.get('/', function(request, response) {\n  response.sendFile(__dirname + '/views/index.html');\n});\n\n// Iniciar el Server de GraphQL\nconst server = new ApolloServer({typeDefs, resolvers});\nserver.applyMiddleware({app}); // Conectar Apollo con Express\n\n// Listo para Escuchar Request\nconst listener = app.listen(process.env.PORT, function() {\n  console.log('Your app is listening on port ' + listener.address().port);\n});\n"
      ]
    },
    "mtime": 1548001295000
  },
  "{\"filename\":\"/app/api/schemas.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/api\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "graphql-import",
            "imported": [
              "importSchema"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "importSchema",
                "local": "importSchema"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "typeDefs"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "typeDefs",
              "exported": "typeDefs"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/api/schemas.js",
      "filenameRelative": "/app/api/schemas.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "schemas.js",
      "sourceFileName": "schemas.js",
      "sourceRoot": "/app/api",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/api",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "schemas"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.typeDefs = undefined;\n\nvar _graphqlImport = require('graphql-import');\n\nvar typeDefs = exports.typeDefs = (0, _graphqlImport.importSchema)('./api/schemas.graphql');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYXMuanMiXSwibmFtZXMiOlsidHlwZURlZnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDTyxJQUFNQSw4QkFBVyxpQ0FBYSx1QkFBYixDQUFqQiIsImZpbGUiOiJzY2hlbWFzLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYXBpIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW1wb3J0U2NoZW1hIH0gZnJvbSAnZ3JhcGhxbC1pbXBvcnQnO1xuZXhwb3J0IGNvbnN0IHR5cGVEZWZzID0gaW1wb3J0U2NoZW1hKCcuL2FwaS9zY2hlbWFzLmdyYXBocWwnKTsiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "schemas.js"
      ],
      "names": [
        "typeDefs"
      ],
      "mappings": ";;;;;;;AAAA;;AACO,IAAMA,8BAAW,iCAAa,uBAAb,CAAjB",
      "file": "schemas.js",
      "sourceRoot": "/app/api",
      "sourcesContent": [
        "import { importSchema } from 'graphql-import';\nexport const typeDefs = importSchema('./api/schemas.graphql');"
      ]
    },
    "mtime": 1547963100000
  },
  "{\"filename\":\"/app/api/resolvers.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/api\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "node-fetch",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "fetch"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "resolvers"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "resolvers",
              "exported": "resolvers"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/api/resolvers.js",
      "filenameRelative": "/app/api/resolvers.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "resolvers.js",
      "sourceFileName": "resolvers.js",
      "sourceRoot": "/app/api",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/api",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "resolvers"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolvers = undefined;\n\nvar _nodeFetch = require('node-fetch');\n\nvar _nodeFetch2 = _interopRequireDefault(_nodeFetch);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar URL_SMNAPI = 'https://ws.smn.gob.ar/'; // Dirección de Base de la REST-API\n\n// HELPERS\n/**\n*  Busca la Estacion mas Cercana a las coordenadas dadas\n*  @param {number} lat  Latitud a Buscar\n*  @param {number} lon  Longitud a Buscar\n*  @param {Array} stations  Colección donde Buscar\n*  @return {Object}  Objeto encontrado, default: el primero de la Colección\n*/\nvar getClosestStation = function getClosestStation(lat, lon, stations) {\n\n  var closest = null; // index de la estación mas cercana\n  var closest_lat = null; // referencia, latitud temporalmente mas cercana\n  var closest_lon = null; // referencia, longitud temporalmente mas cercana\n\n  // Buscamos dentro de la Colección\n  var selectStation = stations.find(function (station, i) {\n    if (closest === null) {\n      // Si es el primer valor inicializamos\n      closest = i;\n      closest_lat = Math.abs(parseFloat(lat) - parseFloat(station.lat));\n      closest_lon = Math.abs(parseFloat(lon) - parseFloat(station.lon));\n    } else {\n      // Valores Relativos de la posicion actual y la estación\n      var rel_lat = Math.abs(parseFloat(lat) - parseFloat(station.lat));\n      var rel_lon = Math.abs(parseFloat(lon) - parseFloat(station.lon));\n      // Comparamos los valores, mas cerca de 0 simultaneamente mas cerca\n      if (rel_lat < closest_lat && rel_lon < closest_lon) {\n        // Cambiamos los valores de referencia\n        closest_lat = rel_lat;\n        closest_lon = rel_lat;\n        closest = i;\n      }\n    }\n    return closest_lat === 0 && closest_lon === 0; // equivalente a (station.lat === lat && station.lon === lon)\n  });\n  // Si encontró la estación la devolvemos sino la mas cercana\n  return selectStation ? selectStation : stations[closest];\n};\n\n// RESOLVERS\nvar resolvers = exports.resolvers = {\n  Query: {\n    getWeatherByCoords: function getWeatherByCoords(root, _ref) {\n      var lat = _ref.lat,\n          lon = _ref.lon;\n\n      return (0, _nodeFetch2.default)(URL_SMNAPI + \"map_items/weather\").then(function (res) {\n        return res.json();\n      }).then(function (stations) {\n        return getClosestStation(lat, lon, stations);\n      }).catch(function (error) {\n        console.log(\"Error Weather : \" + error);\n        return null;\n      });\n    },\n    getWeatherById: function getWeatherById(root, _ref2) {\n      var id = _ref2.id;\n\n      return (0, _nodeFetch2.default)(URL_SMNAPI + \"map_items/weather\").then(function (res) {\n        return res.json();\n      }).then(function (stations) {\n        return stations.find(function (station) {\n          return station.lid === parseInt(id);\n        });\n      }).catch(function (error) {\n        console.log(\"Error Weather : \" + error);\n        return null;\n      });\n    },\n    getWeathers: function getWeathers() {\n      return (0, _nodeFetch2.default)(URL_SMNAPI + \"map_items/weather\").then(function (res) {\n        return res.json();\n      }).catch(function (error) {\n        console.log(\"Error Weather : \" + error);\n        return [];\n      });\n    },\n    getForecast: function getForecast(root, _ref3) {\n      var id = _ref3.id;\n\n      return (0, _nodeFetch2.default)(URL_SMNAPI + \"forecast\").then(function (res) {\n        return res.json();\n      }).then(function (stations) {\n        return stations.find(function (station) {\n          return station.location_id === parseInt(id);\n        });\n      }).then(function (forecast) {\n        var forecastKeys = Object.keys(forecast.forecast);\n        return {\n          \"_id\": forecast._id,\n          \"timestamp\": forecast.timestamp,\n          \"date_time\": forecast.date_time,\n          \"location_id\": forecast.location_id,\n          \"forecast\": forecastKeys.map(function (key) {\n            return forecast.forecast[key];\n          })\n        };\n      }).catch(function (error) {\n        console.log(\"Error Weather : \" + error);\n        return [];\n      });\n    },\n    getForecasts: function getForecasts() {\n      return (0, _nodeFetch2.default)(URL_SMNAPI + \"forecast\").then(function (res) {\n        return res.json();\n      }).then(function (forecasts) {\n        return forecasts.map(function (forecast) {\n          var forecastKeys = Object.keys(forecast.forecast);\n          return {\n            \"_id\": forecast._id,\n            \"timestamp\": forecast.timestamp,\n            \"date_time\": forecast.date_time,\n            \"location_id\": forecast.location_id,\n            \"forecast\": forecastKeys.map(function (key) {\n              return forecast.forecast[key];\n            })\n          };\n        });\n      }).catch(function (error) {\n        console.log(\"Error Weather : \" + error);\n        return [];\n      });\n    }\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJVUkxfU01OQVBJIiwiZ2V0Q2xvc2VzdFN0YXRpb24iLCJsYXQiLCJsb24iLCJzdGF0aW9ucyIsImNsb3Nlc3QiLCJjbG9zZXN0X2xhdCIsImNsb3Nlc3RfbG9uIiwic2VsZWN0U3RhdGlvbiIsImZpbmQiLCJzdGF0aW9uIiwiaSIsIk1hdGgiLCJhYnMiLCJwYXJzZUZsb2F0IiwicmVsX2xhdCIsInJlbF9sb24iLCJyZXNvbHZlcnMiLCJRdWVyeSIsImdldFdlYXRoZXJCeUNvb3JkcyIsInJvb3QiLCJ0aGVuIiwicmVzIiwianNvbiIsImNhdGNoIiwiY29uc29sZSIsImxvZyIsImVycm9yIiwiZ2V0V2VhdGhlckJ5SWQiLCJpZCIsImxpZCIsInBhcnNlSW50IiwiZ2V0V2VhdGhlcnMiLCJnZXRGb3JlY2FzdCIsImxvY2F0aW9uX2lkIiwiZm9yZWNhc3QiLCJmb3JlY2FzdEtleXMiLCJPYmplY3QiLCJrZXlzIiwiX2lkIiwidGltZXN0YW1wIiwiZGF0ZV90aW1lIiwibWFwIiwia2V5IiwiZ2V0Rm9yZWNhc3RzIiwiZm9yZWNhc3RzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7OztBQUNBLElBQU1BLGFBQWEsd0JBQW5CLEMsQ0FBNkM7O0FBRTdDO0FBQ0E7Ozs7Ozs7QUFPQSxJQUFNQyxvQkFBb0IsU0FBcEJBLGlCQUFvQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsUUFBWCxFQUF3Qjs7QUFFaEQsTUFBSUMsVUFBVSxJQUFkLENBRmdELENBRTVCO0FBQ3BCLE1BQUlDLGNBQWMsSUFBbEIsQ0FIZ0QsQ0FHeEI7QUFDeEIsTUFBSUMsY0FBYyxJQUFsQixDQUpnRCxDQUl4Qjs7QUFFeEI7QUFDQSxNQUFNQyxnQkFBZ0JKLFNBQVNLLElBQVQsQ0FBZSxVQUFDQyxPQUFELEVBQVVDLENBQVYsRUFBZ0I7QUFDbkQsUUFBSU4sWUFBWSxJQUFoQixFQUFzQjtBQUFFO0FBQ3RCQSxnQkFBVU0sQ0FBVjtBQUNB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QyxLQUEvQjtBQUNBLGVBQU8sRUFBUDtBQUNELE9BZkksQ0FBUDtBQWdCRDtBQS9ESTtBQURnQixDQUFsQiIsImZpbGUiOiJyZXNvbHZlcnMuanMiLCJzb3VyY2VSb290IjoiL2FwcC9hcGkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZmV0Y2ggZnJvbSAnbm9kZS1mZXRjaCc7XG5jb25zdCBVUkxfU01OQVBJID0gJ2h0dHBzOi8vd3Muc21uLmdvYi5hci8nOyAvLyBEaXJlY2Npw7NuIGRlIEJhc2UgZGUgbGEgUkVTVC1BUElcblxuLy8gSEVMUEVSU1xuLyoqXG4qICBCdXNjYSBsYSBFc3RhY2lvbiBtYXMgQ2VyY2FuYSBhIGxhcyBjb29yZGVuYWRhcyBkYWRhc1xuKiAgQHBhcmFtIHtudW1iZXJ9IGxhdCAgTGF0aXR1ZCBhIEJ1c2NhclxuKiAgQHBhcmFtIHtudW1iZXJ9IGxvbiAgTG9uZ2l0dWQgYSBCdXNjYXJcbiogIEBwYXJhbSB7QXJyYXl9IHN0YXRpb25zICBDb2xlY2Npw7NuIGRvbmRlIEJ1c2NhclxuKiAgQHJldHVybiB7T2JqZWN0fSAgT2JqZXRvIGVuY29udHJhZG8sIGRlZmF1bHQ6IGVsIHByaW1lcm8gZGUgbGEgQ29sZWNjacOzblxuKi9cbmNvbnN0IGdldENsb3Nlc3RTdGF0aW9uID0gKGxhdCwgbG9uLCBzdGF0aW9ucykgPT4ge1xuICBcbiAgbGV0IGNsb3Nlc3QgPSBudWxsOyAvLyBpbmRleCBkZSBsYSBlc3RhY2nDs24gbWFzIGNlcmNhbmFcbiAgbGV0IGNsb3Nlc3RfbGF0ID0gbnVsbDsgLy8gcmVmZXJlbmNpYSwgbGF0aXR1ZCB0ZW1wb3JhbG1lbnRlIG1hcyBjZXJjYW5hXG4gIGxldCBjbG9zZXN0X2xvbiA9IG51bGw7IC8vIHJlZmVyZW5jaWEsIGxvbmdpdHVkIHRlbXBvcmFsbWVudGUgbWFzIGNlcmNhbmFcblxuICAvLyBCdXNjYW1vcyBkZW50cm8gZGUgbGEgQ29sZWNjacOzblxuICBjb25zdCBzZWxlY3RTdGF0aW9uID0gc3RhdGlvbnMuZmluZCggKHN0YXRpb24sIGkpID0+IHsgICAgICAgICAgXG4gICAgaWYgKGNsb3Nlc3QgPT09IG51bGwpIHsgLy8gU2kgZXMgZWwgcHJpbWVyIHZhbG9yIGluaWNpYWxpemFtb3NcbiAgICAgIGNsb3Nlc3QgPSBpO1xuICAgICAgY2xvc2VzdF9sYXQgPSBNYXRoLmFicyhwYXJzZUZsb2F0KGxhdCktcGFyc2VGbG9hdChzdGF0aW9uLmxhdCkpO1xuICAgICAgY2xvc2VzdF9sb24gPSBNYXRoLmFicyhwYXJzZUZsb2F0KGxvbiktcGFyc2VGbG9hdChzdGF0aW9uLmxvbikpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gVmFsb3JlcyBSZWxhdGl2b3MgZGUgbGEgcG9zaWNpb24gYWN0dWFsIHkgbGEgZXN0YWNpw7NuXG4gICAgICAgIGNvbnN0IHJlbF9sYXQgPSBNYXRoLmFicyhwYXJzZUZsb2F0KGxhdCktcGFyc2VGbG9hdChzdGF0aW9uLmxhdCkpO1xuICAgICAgICBjb25zdCByZWxfbG9uID0gTWF0aC5hYnMocGFyc2VGbG9hdChsb24pLXBhcnNlRmxvYXQoc3RhdGlvbi5sb24pKTtcbiAgICAgICAgLy8gQ29tcGFyYW1vcyBsb3MgdmFsb3JlcywgbWFzIGNlcmNhIGRlIDAgc2ltdWx0YW5lYW1lbnRlIG1hcyBjZXJjYVxuICAgICAgICBpZiAoIChyZWxfbGF0IDwgY2xvc2VzdF9sYXQpICYmIChyZWxfbG9uIDwgY2xvc2VzdF9sb24pICkgeyBcbiAgICAgICAgICAvLyBDYW1iaWFtb3MgbG9zIHZhbG9yZXMgZGUgcmVmZXJlbmNpYVxuICAgICAgICAgIGNsb3Nlc3RfbGF0ID0gcmVsX2xhdDtcbiAgICAgICAgICBjbG9zZXN0X2xvbiA9IHJlbF9sYXQ7XG4gICAgICAgICAgY2xvc2VzdCA9IGk7XG4gICAgICB9IFxuICAgIH1cbiAgICByZXR1cm4gKGNsb3Nlc3RfbGF0ID09PSAwICYmIGNsb3Nlc3RfbG9uID09PSAwKSAvLyBlcXVpdmFsZW50ZSBhIChzdGF0aW9uLmxhdCA9PT0gbGF0ICYmIHN0YXRpb24ubG9uID09PSBsb24pXG4gIH0pXG4gIC8vIFNpIGVuY29udHLDsyBsYSBlc3RhY2nDs24gbGEgZGV2b2x2ZW1vcyBzaW5vIGxhIG1hcyBjZXJjYW5hXG4gIHJldHVybiBzZWxlY3RTdGF0aW9uID8gc2VsZWN0U3RhdGlvbiA6IHN0YXRpb25zW2Nsb3Nlc3RdO1xufTtcblxuLy8gUkVTT0xWRVJTXG5leHBvcnQgY29uc3QgcmVzb2x2ZXJzID0ge1xuICBRdWVyeToge1xuICAgIGdldFdlYXRoZXJCeUNvb3JkczogKHJvb3QsIHtsYXQsIGxvbn0pID0+IHtcbiAgICAgIHJldHVybiBmZXRjaChVUkxfU01OQVBJK1wibWFwX2l0ZW1zL3dlYXRoZXJcIilcbiAgICAgICAgLnRoZW4oIHJlcyA9PiByZXMuanNvbigpKSAgICAgICAgICBcbiAgICAgICAgLnRoZW4gKCBzdGF0aW9ucyA9PiBnZXRDbG9zZXN0U3RhdGlvbihsYXQsbG9uLHN0YXRpb25zKSlcbiAgICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIkVycm9yIFdlYXRoZXIgOiBcIitlcnJvcik7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0V2VhdGhlckJ5SWQ6IChyb290LCB7aWR9KSA9PiB7XG4gICAgICByZXR1cm4gZmV0Y2goVVJMX1NNTkFQSStcIm1hcF9pdGVtcy93ZWF0aGVyXCIpXG4gICAgICAgIC50aGVuKCByZXMgPT4gcmVzLmpzb24oKSkgICAgICAgICAgXG4gICAgICAgIC50aGVuICggc3RhdGlvbnMgPT4gIHN0YXRpb25zLmZpbmQoIHN0YXRpb24gPT4gc3RhdGlvbi5saWQgPT09IHBhcnNlSW50KGlkKSApKVxuICAgICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3IgV2VhdGhlciA6IFwiK2Vycm9yKTtcbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRXZWF0aGVyczogKCkgPT4ge1xuICAgICAgcmV0dXJuIGZldGNoKFVSTF9TTU5BUEkrXCJtYXBfaXRlbXMvd2VhdGhlclwiKVxuICAgICAgICAudGhlbiggcmVzID0+IHJlcy5qc29uKCkpXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJFcnJvciBXZWF0aGVyIDogXCIrZXJyb3IpO1xuICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRGb3JlY2FzdDogKHJvb3QsIHtpZH0pID0+IHtcbiAgICAgIHJldHVybiBmZXRjaChVUkxfU01OQVBJK1wiZm9yZWNhc3RcIilcbiAgICAgICAgLnRoZW4oIHJlcyA9PiByZXMuanNvbigpKVxuICAgICAgICAudGhlbiAoIHN0YXRpb25zID0+IHN0YXRpb25zLmZpbmQoIHN0YXRpb24gPT4gc3RhdGlvbi5sb2NhdGlvbl9pZCA9PT0gcGFyc2VJbnQoaWQpICkgKVxuICAgICAgICAudGhlbiAoIChmb3JlY2FzdCkgPT4ge1xuICAgICAgICAgIGNvbnN0IGZvcmVjYXN0S2V5cz0gT2JqZWN0LmtleXMoZm9yZWNhc3QuZm9yZWNhc3QpO1xuICAgICAgICAgIHJldHVybiAoe1xuICAgICAgICAgICAgXCJfaWRcIjogZm9yZWNhc3QuX2lkLFxuICAgICAgICAgICAgXCJ0aW1lc3RhbXBcIjogZm9yZWNhc3QudGltZXN0YW1wLFxuICAgICAgICAgICAgXCJkYXRlX3RpbWVcIjogZm9yZWNhc3QuZGF0ZV90aW1lLFxuICAgICAgICAgICAgXCJsb2NhdGlvbl9pZFwiOiBmb3JlY2FzdC5sb2NhdGlvbl9pZCxcbiAgICAgICAgICAgIFwiZm9yZWNhc3RcIjogZm9yZWNhc3RLZXlzLm1hcCgga2V5ID0+IGZvcmVjYXN0LmZvcmVjYXN0W2tleV0pXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJFcnJvciBXZWF0aGVyIDogXCIrZXJyb3IpO1xuICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRGb3JlY2FzdHM6ICgpID0+IHtcbiAgICAgIHJldHVybiBmZXRjaChVUkxfU01OQVBJK1wiZm9yZWNhc3RcIilcbiAgICAgICAgLnRoZW4oIHJlcyA9PiByZXMuanNvbigpKVxuICAgICAgICAudGhlbiAoIChmb3JlY2FzdHMpID0+IGZvcmVjYXN0cy5tYXAoIGZvcmVjYXN0ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGZvcmVjYXN0S2V5cz0gT2JqZWN0LmtleXMoZm9yZWNhc3QuZm9yZWNhc3QpO1xuICAgICAgICAgICAgcmV0dXJuICh7XG4gICAgICAgICAgICAgIFwiX2lkXCI6IGZvcmVjYXN0Ll9pZCxcbiAgICAgICAgICAgICAgXCJ0aW1lc3RhbXBcIjogZm9yZWNhc3QudGltZXN0YW1wLFxuICAgICAgICAgICAgICBcImRhdGVfdGltZVwiOiBmb3JlY2FzdC5kYXRlX3RpbWUsXG4gICAgICAgICAgICAgIFwibG9jYXRpb25faWRcIjogZm9yZWNhc3QubG9jYXRpb25faWQsXG4gICAgICAgICAgICAgIFwiZm9yZWNhc3RcIjogZm9yZWNhc3RLZXlzLm1hcCgga2V5ID0+IGZvcmVjYXN0LmZvcmVjYXN0W2tleV0pXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSkpXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJFcnJvciBXZWF0aGVyIDogXCIrZXJyb3IpO1xuICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfSk7XG4gICAgfVxuICB9XG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "URL_SMNAPI",
        "getClosestStation",
        "lat",
        "lon",
        "stations",
        "closest",
        "closest_lat",
        "closest_lon",
        "selectStation",
        "find",
        "station",
        "i",
        "Math",
        "abs",
        "parseFloat",
        "rel_lat",
        "rel_lon",
        "resolvers",
        "Query",
        "getWeatherByCoords",
        "root",
        "then",
        "res",
        "json",
        "catch",
        "console",
        "log",
        "error",
        "getWeatherById",
        "id",
        "lid",
        "parseInt",
        "getWeathers",
        "getForecast",
        "location_id",
        "forecast",
        "forecastKeys",
        "Object",
        "keys",
        "_id",
        "timestamp",
        "date_time",
        "map",
        "key",
        "getForecasts",
        "forecasts"
      ],
      "mappings": "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",
      "file": "resolvers.js",
      "sourceRoot": "/app/api",
      "sourcesContent": [
        "import fetch from 'node-fetch';\nconst URL_SMNAPI = 'https://ws.smn.gob.ar/'; // Dirección de Base de la REST-API\n\n// HELPERS\n/**\n*  Busca la Estacion mas Cercana a las coordenadas dadas\n*  @param {number} lat  Latitud a Buscar\n*  @param {number} lon  Longitud a Buscar\n*  @param {Array} stations  Colección donde Buscar\n*  @return {Object}  Objeto encontrado, default: el primero de la Colección\n*/\nconst getClosestStation = (lat, lon, stations) => {\n  \n  let closest = null; // index de la estación mas cercana\n  let closest_lat = null; // referencia, latitud temporalmente mas cercana\n  let closest_lon = null; // referencia, longitud temporalmente mas cercana\n\n  // Buscamos dentro de la Colección\n  const selectStation = stations.find( (station, i) => {          \n    if (closest === null) { // Si es el primer valor inicializamos\n      closest = i;\n      closest_lat = Math.abs(parseFloat(lat)-parseFloat(station.lat));\n      closest_lon = Math.abs(parseFloat(lon)-parseFloat(station.lon));\n    }\n    else {\n        // Valores Relativos de la posicion actual y la estación\n        const rel_lat = Math.abs(parseFloat(lat)-parseFloat(station.lat));\n        const rel_lon = Math.abs(parseFloat(lon)-parseFloat(station.lon));\n        // Comparamos los valores, mas cerca de 0 simultaneamente mas cerca\n        if ( (rel_lat < closest_lat) && (rel_lon < closest_lon) ) { \n          // Cambiamos los valores de referencia\n          closest_lat = rel_lat;\n          closest_lon = rel_lat;\n          closest = i;\n      } \n    }\n    return (closest_lat === 0 && closest_lon === 0) // equivalente a (station.lat === lat && station.lon === lon)\n  })\n  // Si encontró la estación la devolvemos sino la mas cercana\n  return selectStation ? selectStation : stations[closest];\n};\n\n// RESOLVERS\nexport const resolvers = {\n  Query: {\n    getWeatherByCoords: (root, {lat, lon}) => {\n      return fetch(URL_SMNAPI+\"map_items/weather\")\n        .then( res => res.json())          \n        .then ( stations => getClosestStation(lat,lon,stations))\n        .catch(error => {\n          console.log(\"Error Weather : \"+error);\n          return null;\n        });\n    },\n    getWeatherById: (root, {id}) => {\n      return fetch(URL_SMNAPI+\"map_items/weather\")\n        .then( res => res.json())          \n        .then ( stations =>  stations.find( station => station.lid === parseInt(id) ))\n        .catch(error => {\n          console.log(\"Error Weather : \"+error);\n          return null;\n        });\n    },\n    getWeathers: () => {\n      return fetch(URL_SMNAPI+\"map_items/weather\")\n        .then( res => res.json())\n        .catch(error => {\n          console.log(\"Error Weather : \"+error);\n          return [];\n        });\n    },\n    getForecast: (root, {id}) => {\n      return fetch(URL_SMNAPI+\"forecast\")\n        .then( res => res.json())\n        .then ( stations => stations.find( station => station.location_id === parseInt(id) ) )\n        .then ( (forecast) => {\n          const forecastKeys= Object.keys(forecast.forecast);\n          return ({\n            \"_id\": forecast._id,\n            \"timestamp\": forecast.timestamp,\n            \"date_time\": forecast.date_time,\n            \"location_id\": forecast.location_id,\n            \"forecast\": forecastKeys.map( key => forecast.forecast[key])\n          });\n        })\n        .catch(error => {\n          console.log(\"Error Weather : \"+error);\n          return [];\n        });\n    },\n    getForecasts: () => {\n      return fetch(URL_SMNAPI+\"forecast\")\n        .then( res => res.json())\n        .then ( (forecasts) => forecasts.map( forecast => {\n            const forecastKeys= Object.keys(forecast.forecast);\n            return ({\n              \"_id\": forecast._id,\n              \"timestamp\": forecast.timestamp,\n              \"date_time\": forecast.date_time,\n              \"location_id\": forecast.location_id,\n              \"forecast\": forecastKeys.map( key => forecast.forecast[key])\n            });\n        }))\n        .catch(error => {\n          console.log(\"Error Weather : \"+error);\n          return [];\n        });\n    }\n  }\n}"
      ]
    },
    "mtime": 1548015401000
  }
}